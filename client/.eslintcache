[{"D:\\repos\\Projects\\Quizzler\\client\\src\\index.js":"1","D:\\repos\\Projects\\Quizzler\\client\\src\\App.js":"2","D:\\repos\\Projects\\Quizzler\\client\\src\\reportWebVitals.js":"3","D:\\repos\\Projects\\Quizzler\\client\\src\\pages\\Signup.js":"4","D:\\repos\\Projects\\Quizzler\\client\\src\\pages\\Home.js":"5","D:\\repos\\Projects\\Quizzler\\client\\src\\pages\\Login.js":"6","D:\\repos\\Projects\\Quizzler\\client\\src\\pages\\Profile.js":"7","D:\\repos\\Projects\\Quizzler\\client\\src\\pages\\Quiz.js":"8","D:\\repos\\Projects\\Quizzler\\client\\src\\pages\\Results.js":"9","D:\\repos\\Projects\\Quizzler\\client\\src\\components\\Footer\\index.js":"10","D:\\repos\\Projects\\Quizzler\\client\\src\\components\\Header\\index.js":"11","D:\\repos\\Projects\\Quizzler\\client\\src\\utils\\mutations.js":"12","D:\\repos\\Projects\\Quizzler\\client\\src\\utils\\queries.js":"13","D:\\repos\\Projects\\Quizzler\\client\\src\\utils\\auth.js":"14","D:\\repos\\Projects\\Quizzler\\client\\src\\components\\StartForm\\index.js":"15","D:\\repos\\Projects\\Quizzler\\client\\src\\components\\QuestionList\\index.js":"16"},{"size":517,"mtime":1659970118403,"results":"17","hashOfConfig":"18"},{"size":3067,"mtime":1727866582498,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1659970118463,"results":"20","hashOfConfig":"18"},{"size":2819,"mtime":1659970118463,"results":"21","hashOfConfig":"18"},{"size":451,"mtime":1659970118403,"results":"22","hashOfConfig":"18"},{"size":2622,"mtime":1659970118403,"results":"23","hashOfConfig":"18"},{"size":1201,"mtime":1659970118404,"results":"24","hashOfConfig":"18"},{"size":2525,"mtime":1660310147211,"results":"25","hashOfConfig":"18"},{"size":1407,"mtime":1659970118462,"results":"26","hashOfConfig":"18"},{"size":684,"mtime":1659970118400,"results":"27","hashOfConfig":"18"},{"size":1406,"mtime":1659970118401,"results":"28","hashOfConfig":"18"},{"size":967,"mtime":1659970118464,"results":"29","hashOfConfig":"18"},{"size":725,"mtime":1659970118465,"results":"30","hashOfConfig":"18"},{"size":1084,"mtime":1659970118464,"results":"31","hashOfConfig":"18"},{"size":960,"mtime":1659970118402,"results":"32","hashOfConfig":"18"},{"size":2155,"mtime":1661444849056,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"130272f",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\repos\\Projects\\Quizzler\\client\\src\\index.js",[],"D:\\repos\\Projects\\Quizzler\\client\\src\\App.js",[],"D:\\repos\\Projects\\Quizzler\\client\\src\\reportWebVitals.js",[],"D:\\repos\\Projects\\Quizzler\\client\\src\\pages\\Signup.js",[],"D:\\repos\\Projects\\Quizzler\\client\\src\\pages\\Home.js",[],"D:\\repos\\Projects\\Quizzler\\client\\src\\pages\\Login.js",[],"D:\\repos\\Projects\\Quizzler\\client\\src\\pages\\Profile.js",[],"D:\\repos\\Projects\\Quizzler\\client\\src\\pages\\Quiz.js",["68","69"],"import React, { useEffect }  from 'react';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\n\r\nimport QuestionList from '../components/QuestionList';\r\n\r\nimport { QUERY_QUESTIONS, QUERY_ME } from '../utils/queries';\r\nimport { UPDATE_USER_LEVEL } from '../utils/mutations';\r\n\r\nconst Quiz = ({answers, setAnswers, displayQuestions, setDisplayQuestions}) => {\r\n  const { data: userData } = useQuery(QUERY_ME);\r\n\r\n  const { loading, data } = useQuery(QUERY_QUESTIONS, {variables: {limit: 5, level: userData?.me?.level || \"A1\"}});\r\n  \r\n  const [updateUser] = useMutation(UPDATE_USER_LEVEL);\r\n\r\n  // This function is passed to the QuestionList component when the user finishes answering questions and click the Submit button\r\n  const handleFormSubmit = async () => {\r\n    let correct = userData.me.correct;\r\n    let incorrect = userData.me.incorrect;\r\n    let unanswered = userData.me.unanswered;\r\n    for (let i=0; i<displayQuestions.length; i++) {\r\n      if (answers[displayQuestions[i].number].length > 0) {\r\n        if (answers[displayQuestions[i].number] === displayQuestions[i].answer) {\r\n          correct++;\r\n        } else {\r\n          incorrect++;\r\n        }\r\n      }\r\n      else {\r\n        unanswered++;         \r\n      }\r\n    }\r\n    try {\r\n      const { data } = await updateUser({\r\n        variables: {\r\n          id: userData.me._id,\r\n          correct,\r\n          incorrect,\r\n          unanswered,\r\n        },\r\n      });\r\n\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // This parameters in this call to useEffect are 1) an anonymous callback function which sets the displayQuestions \r\n  // array with the questions returned from the database and 2) an optional array of dependencies. The presence of\r\n  // the array in the parameter list means that the callback is executed only if the array has changed\r\n  useEffect(() => {\r\n    if (userData && data) {\r\n      setDisplayQuestions(data.questions)\r\n    }\r\n    else {\r\n      setDisplayQuestions([])\r\n    }\r\n  }, [data?.questions]);\r\n\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"flex-row justify-center\">\r\n        <div className=\"col-12 col-md-8 mb-3\">\r\n          {loading ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <QuestionList\r\n              handleFormSubmit={handleFormSubmit}\r\n              answers={answers}\r\n              setAnswers={setAnswers}\r\n              displayQuestions={displayQuestions}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Quiz;","D:\\repos\\Projects\\Quizzler\\client\\src\\pages\\Results.js",[],"D:\\repos\\Projects\\Quizzler\\client\\src\\components\\Footer\\index.js",[],"D:\\repos\\Projects\\Quizzler\\client\\src\\components\\Header\\index.js",[],"D:\\repos\\Projects\\Quizzler\\client\\src\\utils\\mutations.js",[],"D:\\repos\\Projects\\Quizzler\\client\\src\\utils\\queries.js",[],"D:\\repos\\Projects\\Quizzler\\client\\src\\utils\\auth.js",["70"],"import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    // If there is a token and it's not expired, return `true`\r\n    return token && !this.isTokenExpired(token) ? true : false;\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    // Decode the token to get its expiration time that was set by the server\r\n    const decoded = decode(token);\r\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\r\n    if (decoded.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('id_token');\r\n      return true;\r\n    }\r\n    // If token hasn't passed its expiration time, return `false`\r\n    return false;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('id_token');\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","D:\\repos\\Projects\\Quizzler\\client\\src\\components\\StartForm\\index.js",[],"D:\\repos\\Projects\\Quizzler\\client\\src\\components\\QuestionList\\index.js",[],{"ruleId":"71","severity":1,"message":"72","line":34,"column":15,"nodeType":"73","messageId":"74","endLine":34,"endColumn":19},{"ruleId":"75","severity":1,"message":"76","line":58,"column":6,"nodeType":"77","endLine":58,"endColumn":23,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":41,"column":1,"nodeType":"81","endLine":41,"endColumn":34},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data', 'setDisplayQuestions', and 'userData'. Either include them or remove the dependency array. If 'setDisplayQuestions' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["82"],"import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"83","fix":"84"},"Update the dependencies array to be: [data, data.questions, setDisplayQuestions, userData]",{"range":"85","text":"86"},[1997,2014],"[data, data.questions, setDisplayQuestions, userData]"]