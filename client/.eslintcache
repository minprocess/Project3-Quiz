[{"C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\index.js":"1","C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\App.js":"2","C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\reportWebVitals.js":"3","C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\pages\\Home.js":"4","C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\pages\\Signup.js":"5","C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\pages\\Login.js":"6","C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\pages\\Profile.js":"7","C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\components\\Footer\\index.js":"8","C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\components\\Header\\index.js":"9","C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\utils\\mutations.js":"10","C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\utils\\queries.js":"11","C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\utils\\auth.js":"12","C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\components\\StartForm\\index.js":"13","C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\pages\\Quiz.js":"14","C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\components\\QuestionList\\index.js":"15","C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\pages\\Results.js":"16"},{"size":517,"mtime":1627347570468,"results":"17","hashOfConfig":"18"},{"size":3012,"mtime":1628893381428,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1627347570471,"results":"20","hashOfConfig":"18"},{"size":451,"mtime":1628642417621,"results":"21","hashOfConfig":"18"},{"size":2758,"mtime":1627347570470,"results":"22","hashOfConfig":"18"},{"size":2597,"mtime":1627347570469,"results":"23","hashOfConfig":"18"},{"size":1201,"mtime":1628553371920,"results":"24","hashOfConfig":"18"},{"size":874,"mtime":1628686054148,"results":"25","hashOfConfig":"18"},{"size":1363,"mtime":1628685628200,"results":"26","hashOfConfig":"18"},{"size":530,"mtime":1628687450775,"results":"27","hashOfConfig":"18"},{"size":623,"mtime":1628890611959,"results":"28","hashOfConfig":"18"},{"size":1084,"mtime":1627347570472,"results":"29","hashOfConfig":"18"},{"size":459,"mtime":1628686940793,"results":"30","hashOfConfig":"18"},{"size":1412,"mtime":1628894159850,"results":"31","hashOfConfig":"18"},{"size":2023,"mtime":1628893725980,"results":"32","hashOfConfig":"18"},{"size":629,"mtime":1628888213839,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1sj8eee",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\index.js",[],["71","72"],"C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\App.js",["73"],"import React, { useState, useRef } from 'react';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Home from './pages/Home';\r\nimport Signup from './pages/Signup';\r\nimport Login from './pages/Login';\r\nimport Profile from './pages/Profile';\r\nimport Quiz from './pages/Quiz';\r\nimport Results from './pages/Results';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n\r\n// Construct our main GraphQL API endpoint\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('id_token');\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n\r\n  // resp is user response. That is the answer to a question\r\n  // The component QuestionList is repsonsible for displaying the questions and get the answers\r\n  const [answers, setAnswers] = useState([]);\r\n\r\n  // The Quiz page is responsible for creating the displayQuestions\r\n  // The Quiz page is one of the routes\r\n  const [displayQuestions, setDisplayQuestions] = useState([]);\r\n  //const displayQuestions = useRef([]);\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div className=\"flex-column justify-flex-start min-100-vh\">\r\n          <Header />\r\n          <div className=\"container\">\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route exact path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <Route exact path=\"/signup\">\r\n              <Signup />\r\n            </Route>\r\n            <Route exact path=\"/me\">\r\n              <Profile />\r\n            </Route>\r\n            <Route exact path=\"/profiles/:username\">\r\n              <Profile />\r\n            </Route>\r\n            <Route exact path=\"/quiz\">\r\n              <Quiz answers={answers} \r\n                setAnswers={setAnswers} \r\n                displayQuestions={displayQuestions}\r\n                setDisplayQuestions = {setDisplayQuestions}/>\r\n            </Route>\r\n            <Route exact path=\"/results\">\r\n              <Results answers={answers} displayQuestions={displayQuestions}/>\r\n            </Route>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\reportWebVitals.js",[],"C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\pages\\Home.js",["74"],"import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport StartForm from '../components/StartForm';\r\n\r\nconst Home = () => {\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"flex-row justify-center\">\r\n        <div\r\n          className=\"col-12 col-md-10 mb-3 p-3\"\r\n          style={{ border: '1px dotted #1a1a1a' }}\r\n        >\r\n          <StartForm />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\pages\\Signup.js",[],"C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\pages\\Login.js",[],"C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\pages\\Profile.js",[],"C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\utils\\mutations.js",[],"C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\utils\\queries.js",[],"C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\utils\\auth.js",[],"C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\components\\StartForm\\index.js",[],"C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\pages\\Quiz.js",["75"],"import React, { useEffect }  from 'react';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport QuestionList from '../components/QuestionList';\r\n\r\nimport { QUERY_QUESTIONS, QUERY_ME } from '../utils/queries';\r\n\r\nconst Quiz = ({answers, setAnswers, displayQuestions, setDisplayQuestions}) => {\r\n  const { data: userData } = useQuery(QUERY_ME);\r\n  console.log(\"\\n\\nuserData queryme Quiz.js\")\r\n  console.log(userData?.me)\r\n\r\n  const { loading, data } = useQuery(QUERY_QUESTIONS, {variables: {limit: 5, level: userData?.me?.level || \"A1\"}});\r\n  \r\n  console.log(\"Quiz.js loading\", loading)\r\n  // console.log(\"Quiz.js questions.length\", data.questions.length)\r\n\r\n  useEffect(() => {\r\n    console.log(data?.questions)\r\n    if (userData && data) {\r\n      console.log(\"in if(userData) UseEffect\")\r\n      setDisplayQuestions(data.questions)\r\n    }\r\n    else {\r\n      console.log(\"in else UseEffect\")\r\n      setDisplayQuestions([])\r\n    }\r\n  }, [data?.questions]);\r\n\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"flex-row justify-center\">\r\n        <div className=\"col-12 col-md-8 mb-3\">\r\n          {loading ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <QuestionList\r\n              answers={answers}\r\n              setAnswers={setAnswers}\r\n              displayQuestions={displayQuestions}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Quiz;","C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\components\\QuestionList\\index.js",["76","77"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst QuestionList = ({answers, setAnswers, displayQuestions}) => {\r\n  const myStyle = {display: \"inline; !important\"}\r\n\r\n/*\r\nconst currentQuestions = useRef([])\r\n\r\n(displayQuestions.current || []).map\r\n*/\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(\"answers\")\r\n    console.log(answers)\r\n    /*\r\n    try {\r\n\r\n      setResponse('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n    */\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    //console.log(\"handleChange name\", name)\r\n    //console.log(\"handleChange name\", value)\r\n      setAnswers({\r\n        ...answers, \r\n        [name]: value,\r\n      });\r\n\r\n      console.log(\"handleChange answers\", answers)\r\n  };\r\n  console.log(\"\\n\\ndisplayQuestion\")\r\n  console.log(displayQuestions)\r\n  return (\r\n    <>\r\n      <ul>\r\n        { (displayQuestions || []).map((question) => (\r\n          <li key={question.number}>\r\n            <span className=\"pt-2\" style={myStyle}>\r\n              {question.left}\r\n              {question.choices.length ? (\r\n                <select name={question.number} onChange={handleChange}>\r\n                  <option value=\"\">select...</option>\r\n                  {question.choices.map((choice) => {\r\n                    return(\r\n                      <option value={choice}>\r\n                        {choice}\r\n                      </option>\r\n                    )\r\n                  })}\r\n                </select>\r\n              ) : \r\n              (\r\n                <input type=\"text\" name={question.number}  onChange={handleChange}/>\r\n              )}\r\n              {question.right}\r\n            </span>\r\n          </li>\r\n          ))}\r\n      </ul>\r\n      <div className=\"col-12 col-lg-3\">\r\n        <Link className=\"btn btn-primary btn-block py-3\" to=\"/results\">\r\n          Submit\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuestionList;\r\n","C:\\Users\\wtpat\\repos\\Projects\\Project3-Quiz-MERN\\client\\src\\pages\\Results.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":27,"nodeType":"84","messageId":"85","endLine":1,"endColumn":33},{"ruleId":"82","severity":1,"message":"86","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":18},{"ruleId":"87","severity":1,"message":"88","line":28,"column":6,"nodeType":"89","endLine":28,"endColumn":23,"suggestions":"90"},{"ruleId":"82","severity":1,"message":"91","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"92","line":13,"column":9,"nodeType":"84","messageId":"85","endLine":13,"endColumn":21},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data', 'setDisplayQuestions', and 'userData'. Either include them or remove the dependency array. If 'setDisplayQuestions' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["95"],"'useState' is defined but never used.","'handleSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [data, data.questions, setDisplayQuestions, userData]",{"range":"98","text":"99"},[935,952],"[data, data.questions, setDisplayQuestions, userData]"]